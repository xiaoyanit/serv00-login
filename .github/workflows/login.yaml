name: Run Login Script

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 */3 * *"  # 每三天运行一次，可以根据需求调整时间
  push:
    branches:
      - main
jobs:
  login:
    runs-on: ubuntu-latest



  - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.2
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
    steps:
      - name: Checkout 仓库代码
        uses: actions/checkout@v2

      - name: 设置 Python 环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'  # 设置你希望使用的 Python 版本，建议使用稳定版本

      - name: Create accounts.json from environment variable
        run: echo "$ACCOUNTS_JSON" > accounts.json
        env:
            ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}  # 从GitHub Secrets中获取环境变量

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyppeteer aiofiles requests
          pip install --upgrade pyppeteer

      - name: 运行登录脚本
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}
        run: |
          python login_script.py
